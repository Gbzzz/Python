import timeit
import random

minimo = 0
maximo = 100
qtdTestes = 1000

lista = list(range(maximo))

def ProcurarValorAleatorio():
  return random.randint(minimo, maximo)

def buscaSequencial(lista, valorPesquisado):
    posicao = 0
    encontrou = False
    tamLista = len(lista)
    while posicao < tamLista and not encontrou:
        if lista[posicao] == valorPesquisado:
            encontrou = True
        else:
            posicao = posicao + 1
    return encontrou

def buscaBinaria(lista, valorPesquisado):
   inicio = 0
   fim = len(lista)-1
   encontrou = False

   while inicio <= fim and not encontrou:
     meio = (inicio + fim) // 2
     if lista[meio] == valorPesquisado:
       encontrou = True
     else:
       if valorPesquisado < lista[meio]:
          fim = meio-1
       else:
          inicio = meio+1
   return encontrou

def buscaMista(lista, valorPesquisado):
  valorPesquisado = ProcurarValorAleatorio()
  if len(lista) > 128:
    buscaBinaria(lista, valorPesquisado)
  else:
    buscaSequencial(lista, valorPesquisado)

def funcaoBuscaMista():
  valorPesquisado = ProcurarValorAleatorio()
  buscaMista(lista, valorPesquisado)

def funcaoBuscaSequencial():
  valorPesquisado = ProcurarValorAleatorio()
  buscaSequencial(lista, valorPesquisado)

def funcaoBinaria():
  valorPesquisado = ProcurarValorAleatorio()
  buscaBinaria(lista, valorPesquisado)

while True:
  opcao = int(input("\nTeste 1 - 100 elementos \nTeste 2 - 100.000 elementos\nTeste 3 - 100.000.000 elementos\n4 - Sair\n\n>>> "))

  if opcao == 1:

    minimo = 0
    maximo = 100
    qtdTestes = 1000

    tempoBuscaMista = timeit.timeit(stmt =funcaoBuscaMista ,number = qtdTestes)

    tempoBuscaSequencial = timeit.timeit(stmt =funcaoBuscaSequencial ,number = qtdTestes)

    tempoBuscaBinaria = timeit.timeit(stmt =funcaoBinaria ,number = qtdTestes)

    print(f'\ntempo de duração do teste da busca Mista: {tempoBuscaMista}')

    print(f'\ntempo de duração do teste da busca Sequencial: {tempoBuscaSequencial}')

    print(f'\ntempo de duração do testeda busca Binária: {tempoBuscaBinaria}')

  elif opcao == 2:
    minimo = 0
    maximo = 100000
    qtdTestes = 1000
    lista = list(range(maximo))

    tempoBuscaMista = timeit.timeit(stmt =funcaoBuscaMista ,number = qtdTestes)

    tempoBuscaSequencial = timeit.timeit(stmt =funcaoBuscaSequencial ,number = qtdTestes)

    tempoBuscaBinaria = timeit.timeit(stmt =funcaoBinaria ,number = qtdTestes)

    print(f'\ntempo de duração do teste da busca Mista: {tempoBuscaMista}')

    print(f'\ntempo de duração do teste da busca Sequencial: {tempoBuscaSequencial}')

    print(f'\ntempo de duração do testeda busca Binária: {tempoBuscaBinaria}')
    

  elif opcao == 3:
    minimo = 0
    maximo = 100000000
    qtdTestes = 3
    lista = list(range(maximo))

    tempoBuscaMista = timeit.timeit(stmt =funcaoBuscaMista ,number = qtdTestes)

    tempoBuscaSequencial = timeit.timeit(stmt =funcaoBuscaSequencial ,number = qtdTestes)

    tempoBuscaBinaria = timeit.timeit(stmt =funcaoBinaria ,number = qtdTestes)

    print(f'\ntempo de duração do teste da busca Mista: {tempoBuscaMista}')

    print(f'\ntempo de duração do teste da busca Sequencial: {tempoBuscaSequencial}')

    print(f'\ntempo de duração do testeda busca Binária: {tempoBuscaBinaria}')

  elif opcao == 4:
    print("Finalizando...")
    break
  
  else:
    print("Opção inválida :(")
